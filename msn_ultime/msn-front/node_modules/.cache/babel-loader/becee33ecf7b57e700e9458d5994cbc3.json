{"ast":null,"code":"import _toConsumableArray from \"/home/alan/delivery_2/irc/msn_ultime/msn-front/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/home/alan/delivery_2/irc/msn_ultime/msn-front/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/alan/delivery_2/irc/msn_ultime/msn-front/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/alan/delivery_2/irc/msn_ultime/msn-front/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/alan/delivery_2/irc/msn_ultime/msn-front/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/alan/delivery_2/irc/msn_ultime/msn-front/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/home/alan/delivery_2/irc/msn_ultime/msn-front/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/home/alan/delivery_2/irc/msn_ultime/msn-front/src/Chat/chat.js\";\nimport React from 'react';\nimport io from 'socket.io-client';\n\nvar Chat =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Chat, _React$Component);\n\n  function Chat(props) {\n    var _this;\n\n    _classCallCheck(this, Chat);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Chat).call(this, props));\n    _this.state = {\n      username: '',\n      message: '',\n      messages: [],\n      users: [],\n      auth: false,\n      channel: [],\n      join: ''\n    };\n    _this.socket = io('localhost:8080');\n    _this.state.join = localStorage.getItem('join');\n\n    _this.sendMessage = function (ev) {\n      var socket_id = JSON.parse(localStorage.getItem('user'))['socket_id'];\n      var username = JSON.parse(localStorage.getItem('user'))['username'];\n      var channel = localStorage.getItem('join');\n\n      if (_this.state.message.includes('/nick')) {\n        var dataOldNick = username;\n\n        var dataNick = _this.state.message.split(' ');\n\n        var renamed = {\n          socket_id: socket_id,\n          username: dataNick[1]\n        };\n        localStorage.setItem('user', JSON.stringify(renamed));\n\n        _this.setState({\n          message: ''\n        });\n\n        _this.socket.emit(\"RENAME\", {\n          socket_id: socket_id,\n          channel: channel,\n          author: \"Système\",\n          message: dataOldNick + \" a changé de pseudo en \" + JSON.parse(localStorage.getItem('user'))['username']\n        }, dataNick[1], channel);\n\n        _this.socket.emit('ADD_USERS', {\n          id: _this.socket.id,\n          username: dataNick[1]\n        });\n      } else if (_this.state.message.includes('/create')) {\n        var create = _this.state.message.split(' ');\n\n        _this.socket.emit('CREATE_CHANNEL', create[1]);\n      } else if (_this.state.message.includes('/join')) {\n        var join = _this.state.message.split(' ');\n\n        _this.socket.emit('JOIN_CHANNEL', join[1], username);\n      } else if (_this.state.message.includes(\"/delete\")) {\n        var del = _this.state.message.split(' ');\n\n        _this.socket.emit('DELETE_CHANNEL', del[1]);\n      } else if (_this.state.message.includes(\"/leave\")) {\n        var channels = channel;\n        localStorage.removeItem('join');\n\n        _this.setState({\n          join: ''\n        });\n\n        _this.socket.emit(\"LEAVE_CHANNEL\", username, channels);\n      } else if (_this.state.message.includes('/list')) {\n        _this.socket.emit('GET_CHANNEL');\n      } else if (_this.state.message.includes('/users')) {\n        _this.socket.emit('GET_USERS', channel);\n      } else {\n        if (username === \"\" || username === \"Système\") {\n          username = \"Invité\";\n        }\n\n        if (localStorage.hasOwnProperty('join')) {\n          _this.socket.emit('SEND_CHANNEL_MESSAGE', {\n            socket_id: socket_id,\n            channel: channel,\n            author: username,\n            message: _this.state.message\n          }, channel);\n        } else {\n          _this.socket.emit('SEND_MESSAGE_GENERAL', {\n            socket_id: socket_id,\n            channel: \"General\",\n            author: username,\n            message: _this.state.message\n          });\n        }\n      }\n\n      _this.setState({\n        message: ''\n      });\n    };\n\n    var listChannel = function listChannel(data) {\n      _this.setState({\n        channel: data\n      });\n    };\n\n    var listUsers = function listUsers(data) {\n      _this.setState({\n        users: data\n      });\n    };\n\n    var addUsers = function addUsers(data) {\n      _this.setState({\n        users: _toConsumableArray(_this.state.users).concat([data])\n      });\n    };\n\n    var addMessage = function addMessage(data) {\n      console.log(data);\n\n      _this.setState({\n        messages: _toConsumableArray(_this.state.messages).concat([data])\n      });\n\n      console.log(_this.state.messages);\n    };\n\n    var addChannel = function addChannel(data) {\n      _this.setState({\n        channel: _toConsumableArray(_this.state.channel).concat([data])\n      });\n    };\n\n    var changeChannel = function changeChannel(channel) {\n      _this.setState({\n        join: channel\n      });\n    }; // Message lors d'un nouvel utilisateur\n\n\n    _this.sysMessage = function () {\n      _this.socket.emit(\"NEW_USER\", {\n        author: \"Système\",\n        message: (_this.state.username === '' || _this.state.username === \"Système\" ? \"Invité\" : _this.state.username) + \" à rejoint le salon.\",\n        pseudo: _this.state.username === '' || _this.state.username === \"Système\" ? \"Invité\" : _this.state.username\n      });\n\n      _this.setState({\n        message: ''\n      });\n\n      var info = {\n        socket_id: _this.socket.id,\n        username: _this.state.username === '' || _this.state.username === \"Système\" ? \"Invité\" : _this.state.username\n      };\n      var user_profile = [];\n      user_profile.push(info);\n      localStorage.setItem('user', JSON.stringify(info));\n    };\n\n    _this.socket.on(\"NEW_USER_MESSAGE\", function (data) {\n      addMessage(data);\n    });\n\n    _this.socket.on('ADD_CHANNEL', function (channel) {\n      addChannel(channel);\n    });\n\n    _this.socket.on('CHANGE_CHANNEL', function (channel) {\n      localStorage.setItem('join', channel);\n      changeChannel(channel);\n    });\n\n    _this.socket.on(\"RECIEVE_MESSAGE\", function (data) {\n      addMessage(data);\n    });\n\n    _this.socket.on('LIST_CHANNEL', function (channel) {\n      listChannel(channel);\n    });\n\n    _this.socket.on('LIST_USERS', function (users) {\n      listUsers(users);\n    });\n\n    _this.socket.on('ADD_USERS', function (users) {\n      addUsers(users);\n    });\n\n    _this.socket.on('ADIOS', function (data) {\n      data.channel = channel;\n      data.author = author;\n      username = JSON.parse(localStorage.getItem('user'))['username'];\n      this.socket.emit('SEND_MESSAGE_GENERAL', {\n        channel: channel,\n        author: author,\n        message: username + \" s'est déconnecté\"\n      });\n    }); // Gestion des salons\n    // Gérer l'input de l'username pour rejoindre la chatroom\n\n\n    _this.handleLogin = _this.handleLogin.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(Chat, [{\n    key: \"handleLogin\",\n    value: function handleLogin() {\n      this.setState({\n        auth: true\n      });\n      this.sysMessage();\n      localStorage.setItem('join', 'General');\n    }\n  }, {\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      localStorage.removeItem('join');\n      localStorage.removeItem('users');\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      if (this.state.auth === false) {\n        return React.createElement(\"div\", {\n          className: \"container\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 197\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"row\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 198\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"col-4\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 199\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"card\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 200\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"card-body\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 201\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"card-title\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 202\n          },\n          __self: this\n        }, \"Ton pseudo :\"), React.createElement(\"hr\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 203\n          },\n          __self: this\n        }), React.createElement(\"div\", {\n          className: \"footer\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 204\n          },\n          __self: this\n        }, React.createElement(\"input\", {\n          type: \"text\",\n          placeholder: \"Pseudo\",\n          value: this.state.username,\n          onChange: function onChange(ev) {\n            return _this2.setState({\n              username: ev.target.value\n            });\n          },\n          className: \"form-control\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 205\n          },\n          __self: this\n        }), React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 206\n          },\n          __self: this\n        }), React.createElement(\"button\", {\n          className: \"btn btn-primary form-control\",\n          onClick: this.handleLogin,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 207\n          },\n          __self: this\n        }, \"Send\")))))));\n      } else {\n        if (this.state.username === \"\" || this.state.username === \"Système\") {\n          this.setState({\n            username: \"Invité\"\n          });\n        }\n\n        return React.createElement(\"div\", {\n          className: \"container\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 220\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"row\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 221\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"col-4\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 222\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"card\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 223\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"card-body\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 224\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"card-title\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 225\n          },\n          __self: this\n        }, \"Salons\"), React.createElement(\"hr\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 226\n          },\n          __self: this\n        }), React.createElement(\"div\", {\n          className: \"salons\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 227\n          },\n          __self: this\n        }, this.state.channel.map(function (chat) {\n          return React.createElement(\"a\", {\n            class: \"btn btn-outline-danger\",\n            href: true,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 230\n            },\n            __self: this\n          }, chat.name);\n        }))))), React.createElement(\"div\", {\n          className: \"col-6\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 236\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"card\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 237\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"card-body\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 238\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"card-title\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 239\n          },\n          __self: this\n        }, \"Global Chat\"), React.createElement(\"hr\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 240\n          },\n          __self: this\n        }), React.createElement(\"div\", {\n          className: \"messages\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 241\n          },\n          __self: this\n        }, this.state.messages.map(function (message) {\n          if (message.author === \"Système\") {\n            return React.createElement(\"div\", {\n              className: \"text-danger\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 245\n              },\n              __self: this\n            }, message.author, \": \", message.message);\n          } else {\n            return React.createElement(\"div\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 249\n              },\n              __self: this\n            }, message.author, \": \", message.message);\n          }\n        })), React.createElement(\"div\", {\n          className: \"footer\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 254\n          },\n          __self: this\n        }, React.createElement(\"input\", {\n          type: \"text\",\n          placeholder: \"Message\",\n          className: \"form-control\",\n          value: this.state.message,\n          onChange: function onChange(ev) {\n            return _this2.setState({\n              message: ev.target.value\n            });\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 255\n          },\n          __self: this\n        }), React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 256\n          },\n          __self: this\n        }), React.createElement(\"button\", {\n          className: \"btn btn-primary form-control\",\n          onClick: this.sendMessage,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 257\n          },\n          __self: this\n        }, \"Envoi\"))))), React.createElement(\"div\", {\n          className: \"col-2\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 262\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"card\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 263\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"card-body\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 264\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"card-title\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 265\n          },\n          __self: this\n        }, \"Utilisateurs\"), React.createElement(\"hr\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 266\n          },\n          __self: this\n        }), React.createElement(\"div\", {\n          className: \"users\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 267\n          },\n          __self: this\n        }, this.state.users.map(function (user) {\n          return React.createElement(\"div\", {\n            class: \"user-item\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 270\n            },\n            __self: this\n          }, user.username);\n        })))))));\n      }\n    }\n  }]);\n\n  return Chat;\n}(React.Component);\n\nexport default Chat;","map":{"version":3,"sources":["/home/alan/delivery_2/irc/msn_ultime/msn-front/src/Chat/chat.js"],"names":["React","io","Chat","props","state","username","message","messages","users","auth","channel","join","socket","localStorage","getItem","sendMessage","ev","socket_id","JSON","parse","includes","dataOldNick","dataNick","split","renamed","setItem","stringify","setState","emit","author","id","create","del","channels","removeItem","hasOwnProperty","listChannel","data","listUsers","addUsers","addMessage","console","log","addChannel","changeChannel","sysMessage","pseudo","info","user_profile","push","on","handleLogin","bind","target","value","map","chat","name","user","Component"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,EAAP,MAAe,kBAAf;;IAEMC,I;;;;;AAEF,gBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,8EAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AACTC,MAAAA,QAAQ,EAAE,EADD;AAETC,MAAAA,OAAO,EAAE,EAFA;AAGTC,MAAAA,QAAQ,EAAE,EAHD;AAITC,MAAAA,KAAK,EAAE,EAJE;AAKTC,MAAAA,IAAI,EAAE,KALG;AAMTC,MAAAA,OAAO,EAAE,EANA;AAOTC,MAAAA,IAAI,EAAE;AAPG,KAAb;AASA,UAAKC,MAAL,GAAcX,EAAE,CAAC,gBAAD,CAAhB;AACA,UAAKG,KAAL,CAAWO,IAAX,GAAkBE,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAlB;;AAGA,UAAKC,WAAL,GAAmB,UAAAC,EAAE,EAAI;AACrB,UAAIC,SAAS,GAAGC,IAAI,CAACC,KAAL,CAAWN,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAX,EAAyC,WAAzC,CAAhB;AACA,UAAIT,QAAQ,GAAGa,IAAI,CAACC,KAAL,CAAWN,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAX,EAAyC,UAAzC,CAAf;AACA,UAAIJ,OAAO,GAAGG,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAd;;AAEA,UAAI,MAAKV,KAAL,CAAWE,OAAX,CAAmBc,QAAnB,CAA4B,OAA5B,CAAJ,EAA0C;AACtC,YAAIC,WAAW,GAAGhB,QAAlB;;AACA,YAAIiB,QAAQ,GAAG,MAAKlB,KAAL,CAAWE,OAAX,CAAmBiB,KAAnB,CAAyB,GAAzB,CAAf;;AACA,YAAIC,OAAO,GAAG;AACVP,UAAAA,SAAS,EAAEA,SADD;AAEVZ,UAAAA,QAAQ,EAAEiB,QAAQ,CAAC,CAAD;AAFR,SAAd;AAIAT,QAAAA,YAAY,CAACY,OAAb,CAAqB,MAArB,EAA6BP,IAAI,CAACQ,SAAL,CAAeF,OAAf,CAA7B;;AACA,cAAKG,QAAL,CAAc;AAACrB,UAAAA,OAAO,EAAE;AAAV,SAAd;;AACA,cAAKM,MAAL,CAAYgB,IAAZ,CAAiB,QAAjB,EAA2B;AACvBX,UAAAA,SAAS,EAAEA,SADY;AAEvBP,UAAAA,OAAO,EAAEA,OAFc;AAGvBmB,UAAAA,MAAM,EAAE,SAHe;AAIvBvB,UAAAA,OAAO,EAAEe,WAAW,GAAG,yBAAd,GAA0CH,IAAI,CAACC,KAAL,CAAWN,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAX,EAAyC,UAAzC;AAJ5B,SAA3B,EAKGQ,QAAQ,CAAC,CAAD,CALX,EAKgBZ,OALhB;;AAMA,cAAKE,MAAL,CAAYgB,IAAZ,CAAiB,WAAjB,EAA8B;AAC1BE,UAAAA,EAAE,EAAE,MAAKlB,MAAL,CAAYkB,EADU;AAE1BzB,UAAAA,QAAQ,EAAEiB,QAAQ,CAAC,CAAD;AAFQ,SAA9B;AAIH,OAnBD,MAmBO,IAAI,MAAKlB,KAAL,CAAWE,OAAX,CAAmBc,QAAnB,CAA4B,SAA5B,CAAJ,EAA4C;AAC/C,YAAIW,MAAM,GAAG,MAAK3B,KAAL,CAAWE,OAAX,CAAmBiB,KAAnB,CAAyB,GAAzB,CAAb;;AACA,cAAKX,MAAL,CAAYgB,IAAZ,CAAiB,gBAAjB,EAAmCG,MAAM,CAAC,CAAD,CAAzC;AACH,OAHM,MAGA,IAAI,MAAK3B,KAAL,CAAWE,OAAX,CAAmBc,QAAnB,CAA4B,OAA5B,CAAJ,EAA0C;AAC7C,YAAIT,IAAI,GAAG,MAAKP,KAAL,CAAWE,OAAX,CAAmBiB,KAAnB,CAAyB,GAAzB,CAAX;;AACA,cAAKX,MAAL,CAAYgB,IAAZ,CAAiB,cAAjB,EAAiCjB,IAAI,CAAC,CAAD,CAArC,EAA0CN,QAA1C;AACH,OAHM,MAGA,IAAI,MAAKD,KAAL,CAAWE,OAAX,CAAmBc,QAAnB,CAA4B,SAA5B,CAAJ,EAA4C;AAC/C,YAAIY,GAAG,GAAG,MAAK5B,KAAL,CAAWE,OAAX,CAAmBiB,KAAnB,CAAyB,GAAzB,CAAV;;AACA,cAAKX,MAAL,CAAYgB,IAAZ,CAAiB,gBAAjB,EAAmCI,GAAG,CAAC,CAAD,CAAtC;AACH,OAHM,MAGA,IAAI,MAAK5B,KAAL,CAAWE,OAAX,CAAmBc,QAAnB,CAA4B,QAA5B,CAAJ,EAA2C;AAC9C,YAAIa,QAAQ,GAAGvB,OAAf;AACAG,QAAAA,YAAY,CAACqB,UAAb,CAAwB,MAAxB;;AACA,cAAKP,QAAL,CAAc;AACVhB,UAAAA,IAAI,EAAE;AADI,SAAd;;AAGA,cAAKC,MAAL,CAAYgB,IAAZ,CAAiB,eAAjB,EAAiCvB,QAAjC,EAA0C4B,QAA1C;AACH,OAPM,MAOA,IAAI,MAAK7B,KAAL,CAAWE,OAAX,CAAmBc,QAAnB,CAA4B,OAA5B,CAAJ,EAA0C;AAC7C,cAAKR,MAAL,CAAYgB,IAAZ,CAAiB,aAAjB;AACH,OAFM,MAEA,IAAI,MAAKxB,KAAL,CAAWE,OAAX,CAAmBc,QAAnB,CAA4B,QAA5B,CAAJ,EAA2C;AAC9C,cAAKR,MAAL,CAAYgB,IAAZ,CAAiB,WAAjB,EAA8BlB,OAA9B;AACH,OAFM,MAEA;AACH,YAAIL,QAAQ,KAAK,EAAb,IAAmBA,QAAQ,KAAK,SAApC,EAA+C;AAC3CA,UAAAA,QAAQ,GAAG,QAAX;AACH;;AACD,YAAIQ,YAAY,CAACsB,cAAb,CAA4B,MAA5B,CAAJ,EAAyC;AACrC,gBAAKvB,MAAL,CAAYgB,IAAZ,CAAiB,sBAAjB,EAAyC;AACrCX,YAAAA,SAAS,EAAEA,SAD0B;AAErCP,YAAAA,OAAO,EAAEA,OAF4B;AAGrCmB,YAAAA,MAAM,EAAExB,QAH6B;AAIrCC,YAAAA,OAAO,EAAE,MAAKF,KAAL,CAAWE;AAJiB,WAAzC,EAKGI,OALH;AAMH,SAPD,MAOO;AACH,gBAAKE,MAAL,CAAYgB,IAAZ,CAAiB,sBAAjB,EAAyC;AACrCX,YAAAA,SAAS,EAAEA,SAD0B;AAErCP,YAAAA,OAAO,EAAE,SAF4B;AAGrCmB,YAAAA,MAAM,EAAExB,QAH6B;AAIrCC,YAAAA,OAAO,EAAE,MAAKF,KAAL,CAAWE;AAJiB,WAAzC;AAMH;AACJ;;AACD,YAAKqB,QAAL,CAAc;AAACrB,QAAAA,OAAO,EAAE;AAAV,OAAd;AACH,KAjED;;AAqEA,QAAM8B,WAAW,GAAG,SAAdA,WAAc,CAAAC,IAAI,EAAG;AACvB,YAAKV,QAAL,CAAc;AACVjB,QAAAA,OAAO,EAAE2B;AADC,OAAd;AAGH,KAJD;;AAKA,QAAMC,SAAS,GAAG,SAAZA,SAAY,CAAAD,IAAI,EAAI;AACtB,YAAKV,QAAL,CAAc;AACVnB,QAAAA,KAAK,EAAE6B;AADG,OAAd;AAGH,KAJD;;AAKA,QAAME,QAAQ,GAAG,SAAXA,QAAW,CAAAF,IAAI,EAAI;AACrB,YAAKV,QAAL,CAAc;AACVnB,QAAAA,KAAK,qBAAM,MAAKJ,KAAL,CAAWI,KAAjB,UAAwB6B,IAAxB;AADK,OAAd;AAGH,KAJD;;AAKA,QAAMG,UAAU,GAAG,SAAbA,UAAa,CAAAH,IAAI,EAAI;AACvBI,MAAAA,OAAO,CAACC,GAAR,CAAYL,IAAZ;;AACA,YAAKV,QAAL,CAAc;AAACpB,QAAAA,QAAQ,qBAAM,MAAKH,KAAL,CAAWG,QAAjB,UAA2B8B,IAA3B;AAAT,OAAd;;AACAI,MAAAA,OAAO,CAACC,GAAR,CAAY,MAAKtC,KAAL,CAAWG,QAAvB;AACH,KAJD;;AAKA,QAAMoC,UAAU,GAAG,SAAbA,UAAa,CAAAN,IAAI,EAAI;AACvB,YAAKV,QAAL,CAAc;AACVjB,QAAAA,OAAO,qBAAM,MAAKN,KAAL,CAAWM,OAAjB,UAA0B2B,IAA1B;AADG,OAAd;AAGH,KAJD;;AAKA,QAAMO,aAAa,GAAG,SAAhBA,aAAgB,CAAAlC,OAAO,EAAI;AAC7B,YAAKiB,QAAL,CAAc;AACVhB,QAAAA,IAAI,EAAED;AADI,OAAd;AAGH,KAJD,CA7Ge,CAmHf;;;AACA,UAAKmC,UAAL,GAAkB,YAAM;AACpB,YAAKjC,MAAL,CAAYgB,IAAZ,CAAiB,UAAjB,EAA6B;AACzBC,QAAAA,MAAM,EAAE,SADiB;AAEzBvB,QAAAA,OAAO,EAAE,CAAC,MAAKF,KAAL,CAAWC,QAAX,KAAwB,EAAxB,IAA8B,MAAKD,KAAL,CAAWC,QAAX,KAAwB,SAAtD,GAAkE,QAAlE,GAA6E,MAAKD,KAAL,CAAWC,QAAzF,IAAqG,sBAFrF;AAGzByC,QAAAA,MAAM,EAAG,MAAK1C,KAAL,CAAWC,QAAX,KAAwB,EAAxB,IAA8B,MAAKD,KAAL,CAAWC,QAAX,KAAwB,SAAtD,GAAkE,QAAlE,GAA6E,MAAKD,KAAL,CAAWC;AAHxE,OAA7B;;AAKA,YAAKsB,QAAL,CAAc;AAACrB,QAAAA,OAAO,EAAE;AAAV,OAAd;;AACA,UAAIyC,IAAI,GAAG;AACP9B,QAAAA,SAAS,EAAE,MAAKL,MAAL,CAAYkB,EADhB;AAEPzB,QAAAA,QAAQ,EAAG,MAAKD,KAAL,CAAWC,QAAX,KAAwB,EAAxB,IAA8B,MAAKD,KAAL,CAAWC,QAAX,KAAwB,SAAtD,GAAkE,QAAlE,GAA6E,MAAKD,KAAL,CAAWC;AAF5F,OAAX;AAIA,UAAI2C,YAAY,GAAG,EAAnB;AACAA,MAAAA,YAAY,CAACC,IAAb,CAAkBF,IAAlB;AACAlC,MAAAA,YAAY,CAACY,OAAb,CAAqB,MAArB,EAA6BP,IAAI,CAACQ,SAAL,CAAeqB,IAAf,CAA7B;AACH,KAdD;;AAgBA,UAAKnC,MAAL,CAAYsC,EAAZ,CAAe,kBAAf,EAAmC,UAASb,IAAT,EAAe;AAC9CG,MAAAA,UAAU,CAACH,IAAD,CAAV;AACH,KAFD;;AAIA,UAAKzB,MAAL,CAAYsC,EAAZ,CAAe,aAAf,EAA8B,UAASxC,OAAT,EAAkB;AAC5CiC,MAAAA,UAAU,CAACjC,OAAD,CAAV;AACH,KAFD;;AAIA,UAAKE,MAAL,CAAYsC,EAAZ,CAAe,gBAAf,EAAiC,UAASxC,OAAT,EAAkB;AAC/CG,MAAAA,YAAY,CAACY,OAAb,CAAqB,MAArB,EAA6Bf,OAA7B;AACAkC,MAAAA,aAAa,CAAClC,OAAD,CAAb;AACH,KAHD;;AAKA,UAAKE,MAAL,CAAYsC,EAAZ,CAAe,iBAAf,EAAkC,UAASb,IAAT,EAAe;AAC7CG,MAAAA,UAAU,CAACH,IAAD,CAAV;AACH,KAFD;;AAIA,UAAKzB,MAAL,CAAYsC,EAAZ,CAAe,cAAf,EAA+B,UAASxC,OAAT,EAAkB;AAC7C0B,MAAAA,WAAW,CAAC1B,OAAD,CAAX;AACH,KAFD;;AAIA,UAAKE,MAAL,CAAYsC,EAAZ,CAAe,YAAf,EAA6B,UAAS1C,KAAT,EAAgB;AACzC8B,MAAAA,SAAS,CAAC9B,KAAD,CAAT;AACH,KAFD;;AAIA,UAAKI,MAAL,CAAYsC,EAAZ,CAAe,WAAf,EAA4B,UAAS1C,KAAT,EAAgB;AACxC+B,MAAAA,QAAQ,CAAC/B,KAAD,CAAR;AACH,KAFD;;AAIA,UAAKI,MAAL,CAAYsC,EAAZ,CAAe,OAAf,EAAwB,UAASb,IAAT,EAAe;AACnCA,MAAAA,IAAI,CAAC3B,OAAL,GAAeA,OAAf;AACA2B,MAAAA,IAAI,CAACR,MAAL,GAAcA,MAAd;AACAxB,MAAAA,QAAQ,GAAGa,IAAI,CAACC,KAAL,CAAWN,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAX,EAAyC,UAAzC,CAAX;AACA,WAAKF,MAAL,CAAYgB,IAAZ,CAAiB,sBAAjB,EAAyC;AACrClB,QAAAA,OAAO,EAAEA,OAD4B;AAErCmB,QAAAA,MAAM,EAAEA,MAF6B;AAGrCvB,QAAAA,OAAO,EAAED,QAAQ,GAAG;AAHiB,OAAzC;AAKH,KATD,EAjKe,CA4Kf;AAEA;;;AACA,UAAK8C,WAAL,GAAmB,MAAKA,WAAL,CAAiBC,IAAjB,uDAAnB;AA/Ke;AAgLlB;;;;kCAEa;AACV,WAAKzB,QAAL,CAAc;AAAClB,QAAAA,IAAI,EAAE;AAAP,OAAd;AACA,WAAKoC,UAAL;AACAhC,MAAAA,YAAY,CAACY,OAAb,CAAqB,MAArB,EAA6B,SAA7B;AACH;;;yCACoB;AACjBZ,MAAAA,YAAY,CAACqB,UAAb,CAAwB,MAAxB;AACArB,MAAAA,YAAY,CAACqB,UAAb,CAAwB,OAAxB;AACH;;;6BAEQ;AAAA;;AACL,UAAI,KAAK9B,KAAL,CAAWK,IAAX,KAAoB,KAAxB,EAA+B;AAC3B,eACI;AAAK,UAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI;AAAK,UAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI;AAAK,UAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI;AAAK,UAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI;AAAK,UAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI;AAAK,UAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAFJ,EAGI;AAAK,UAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI;AAAO,UAAA,IAAI,EAAC,MAAZ;AAAmB,UAAA,WAAW,EAAC,QAA/B;AAAwC,UAAA,KAAK,EAAE,KAAKL,KAAL,CAAWC,QAA1D;AAAoE,UAAA,QAAQ,EAAE,kBAAAW,EAAE;AAAA,mBAAI,MAAI,CAACW,QAAL,CAAc;AAACtB,cAAAA,QAAQ,EAAEW,EAAE,CAACqC,MAAH,CAAUC;AAArB,aAAd,CAAJ;AAAA,WAAhF;AAAgI,UAAA,SAAS,EAAC,cAA1I;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAFJ,EAGI;AAAQ,UAAA,SAAS,EAAC,8BAAlB;AAAiD,UAAA,OAAO,EAAE,KAAKH,WAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHJ,CAHJ,CADJ,CADJ,CADJ,CADJ,CADJ;AAmBH,OApBD,MAoBO;AACH,YAAI,KAAK/C,KAAL,CAAWC,QAAX,KAAwB,EAAxB,IAA8B,KAAKD,KAAL,CAAWC,QAAX,KAAwB,SAA1D,EAAqE;AACjE,eAAKsB,QAAL,CAAc;AAACtB,YAAAA,QAAQ,EAAE;AAAX,WAAd;AACH;;AACD,eACI;AAAK,UAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI;AAAK,UAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI;AAAK,UAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI;AAAK,UAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI;AAAK,UAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI;AAAK,UAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAFJ,EAGI;AAAK,UAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACC,KAAKD,KAAL,CAAWM,OAAX,CAAmB6C,GAAnB,CAAuB,UAAAC,IAAI,EAAI;AAC5B,iBACA;AAAG,YAAA,KAAK,EAAC,wBAAT;AAAkC,YAAA,IAAI,MAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAwCA,IAAI,CAACC,IAA7C,CADA;AAEC,SAHJ,CADD,CAHJ,CADJ,CADJ,CADJ,EAeI;AAAK,UAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI;AAAK,UAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI;AAAK,UAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI;AAAK,UAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAFJ,EAGI;AAAK,UAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACK,KAAKrD,KAAL,CAAWG,QAAX,CAAoBgD,GAApB,CAAwB,UAAAjD,OAAO,EAAI;AAChC,cAAIA,OAAO,CAACuB,MAAR,KAAmB,SAAvB,EAAkC;AAC9B,mBACI;AAAK,cAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAA8BvB,OAAO,CAACuB,MAAtC,QAAgDvB,OAAO,CAACA,OAAxD,CADJ;AAGH,WAJD,MAIO;AACH,mBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAMA,OAAO,CAACuB,MAAd,QAAwBvB,OAAO,CAACA,OAAhC,CADJ;AAGH;AACJ,SAVA,CADL,CAHJ,EAgBI;AAAK,UAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI;AAAO,UAAA,IAAI,EAAC,MAAZ;AAAmB,UAAA,WAAW,EAAC,SAA/B;AAAyC,UAAA,SAAS,EAAC,cAAnD;AAAkE,UAAA,KAAK,EAAE,KAAKF,KAAL,CAAWE,OAApF;AAA6F,UAAA,QAAQ,EAAE,kBAAAU,EAAE;AAAA,mBAAI,MAAI,CAACW,QAAL,CAAc;AAACrB,cAAAA,OAAO,EAAEU,EAAE,CAACqC,MAAH,CAAUC;AAApB,aAAd,CAAJ;AAAA,WAAzG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAFJ,EAGI;AAAQ,UAAA,SAAS,EAAC,8BAAlB;AAAiD,UAAA,OAAO,EAAE,KAAKvC,WAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAHJ,CAhBJ,CADJ,CADJ,CAfJ,EAyCI;AAAK,UAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI;AAAK,UAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI;AAAK,UAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI;AAAK,UAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAFJ,EAGI;AAAK,UAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACC,KAAKX,KAAL,CAAWI,KAAX,CAAiB+C,GAAjB,CAAqB,UAAAG,IAAI,EAAI;AAC1B,iBACI;AAAK,YAAA,KAAK,EAAC,WAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAwBA,IAAI,CAACrD,QAA7B,CADJ;AAGH,SAJA,CADD,CAHJ,CADJ,CADJ,CAzCJ,CADJ,CADJ;AA6DH;AACJ;;;;EArRcL,KAAK,CAAC2D,S;;AAwRzB,eAAezD,IAAf","sourcesContent":["import React from 'react';\nimport io from 'socket.io-client';\n\nclass Chat extends React.Component {\n    \n    constructor(props) {\n        super(props);\n        this.state = {\n            username: '',\n            message: '',\n            messages: [],\n            users: [],\n            auth: false,\n            channel: [],\n            join: '',\n        };\n        this.socket = io('localhost:8080');\n        this.state.join = localStorage.getItem('join');\n\n\n        this.sendMessage = ev => {\n            let socket_id = JSON.parse(localStorage.getItem('user'))['socket_id'];\n            let username = JSON.parse(localStorage.getItem('user'))['username'];\n            let channel = localStorage.getItem('join');\n\n            if (this.state.message.includes('/nick')) {\n                let dataOldNick = username;\n                let dataNick = this.state.message.split(' ');\n                let renamed = {\n                    socket_id: socket_id,\n                    username: dataNick[1]\n                };\n                localStorage.setItem('user', JSON.stringify(renamed));\n                this.setState({message: ''});\n                this.socket.emit(\"RENAME\", {\n                    socket_id: socket_id,\n                    channel: channel,\n                    author: \"Système\",\n                    message: dataOldNick + \" a changé de pseudo en \" + JSON.parse(localStorage.getItem('user'))['username']\n                }, dataNick[1], channel);\n                this.socket.emit('ADD_USERS', {\n                    id: this.socket.id,\n                    username: dataNick[1]\n                })\n            } else if (this.state.message.includes('/create')) {\n                let create = this.state.message.split(' ');\n                this.socket.emit('CREATE_CHANNEL', create[1])\n            } else if (this.state.message.includes('/join')) {\n                let join = this.state.message.split(' ');\n                this.socket.emit('JOIN_CHANNEL', join[1], username)\n            } else if (this.state.message.includes(\"/delete\")) {\n                let del = this.state.message.split(' ');\n                this.socket.emit('DELETE_CHANNEL', del[1])\n            } else if (this.state.message.includes(\"/leave\")) {\n                let channels = channel;\n                localStorage.removeItem('join');\n                this.setState({\n                    join: ''\n                });\n                this.socket.emit(\"LEAVE_CHANNEL\",username,channels);\n            } else if (this.state.message.includes('/list')) {\n                this.socket.emit('GET_CHANNEL')\n            } else if (this.state.message.includes('/users')) {\n                this.socket.emit('GET_USERS', channel)\n            } else { \n                if (username === \"\" || username === \"Système\") {\n                    username = \"Invité\";\n                }\n                if (localStorage.hasOwnProperty('join')) {\n                    this.socket.emit('SEND_CHANNEL_MESSAGE', {\n                        socket_id: socket_id,\n                        channel: channel,\n                        author: username,\n                        message: this.state.message,\n                    }, channel)\n                } else {\n                    this.socket.emit('SEND_MESSAGE_GENERAL', {\n                        socket_id: socket_id,\n                        channel: \"General\",\n                        author: username,\n                        message: this.state.message,\n                    })\n                }\n            }\n            this.setState({message: ''});\n        }\n\n\n\n        const listChannel = data =>{\n            this.setState({\n                channel: data\n            });\n        }\n        const listUsers = data => {\n            this.setState({\n                users: data\n            });\n        };\n        const addUsers = data => {\n            this.setState({\n                users: [...this.state.users, data]\n            });\n        };\n        const addMessage = data => {\n            console.log(data);\n            this.setState({messages: [...this.state.messages, data]});\n            console.log(this.state.messages);\n        };\n        const addChannel = data => {\n            this.setState({\n                channel: [...this.state.channel, data]\n            });\n        };\n        const changeChannel = channel => {\n            this.setState({\n                join: channel\n            });\n        }\n\n        // Message lors d'un nouvel utilisateur\n        this.sysMessage = () => {\n            this.socket.emit(\"NEW_USER\", {\n                author: \"Système\",\n                message: (this.state.username === '' || this.state.username === \"Système\" ? \"Invité\" : this.state.username) + \" à rejoint le salon.\",\n                pseudo: (this.state.username === '' || this.state.username === \"Système\" ? \"Invité\" : this.state.username),\n            });\n            this.setState({message: ''});\n            var info = {\n                socket_id: this.socket.id,\n                username: (this.state.username === '' || this.state.username === \"Système\" ? \"Invité\" : this.state.username)\n            };\n            var user_profile = []\n            user_profile.push(info)\n            localStorage.setItem('user', JSON.stringify(info));\n        };\n\n        this.socket.on(\"NEW_USER_MESSAGE\", function(data) {\n            addMessage(data);\n        });\n\n        this.socket.on('ADD_CHANNEL', function(channel) {\n            addChannel(channel)\n        });\n\n        this.socket.on('CHANGE_CHANNEL', function(channel) {\n            localStorage.setItem('join', channel);\n            changeChannel(channel)\n        });\n\n        this.socket.on(\"RECIEVE_MESSAGE\", function(data) {\n            addMessage(data);\n        });\n\n        this.socket.on('LIST_CHANNEL', function(channel) {\n            listChannel(channel);\n        });\n\n        this.socket.on('LIST_USERS', function(users) {\n            listUsers(users);\n        });\n\n        this.socket.on('ADD_USERS', function(users) {\n            addUsers(users)\n        });\n        \n        this.socket.on('ADIOS', function(data) {\n            data.channel = channel;\n            data.author = author;\n            username = JSON.parse(localStorage.getItem('user'))['username'];\n            this.socket.emit('SEND_MESSAGE_GENERAL', {\n                channel: channel,\n                author: author,\n                message: username + \" s'est déconnecté\",\n            })\n        })\n\n        // Gestion des salons\n        \n        // Gérer l'input de l'username pour rejoindre la chatroom\n        this.handleLogin = this.handleLogin.bind(this);\n    }\n\n    handleLogin() {\n        this.setState({auth: true});\n        this.sysMessage();\n        localStorage.setItem('join', 'General');\n    }\n    componentWillMount() {\n        localStorage.removeItem('join');\n        localStorage.removeItem('users');\n    }\n\n    render() {\n        if (this.state.auth === false) {\n            return (\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <div className=\"col-4\">\n                            <div className=\"card\">\n                                <div className=\"card-body\">\n                                    <div className=\"card-title\">Ton pseudo :</div>\n                                    <hr />\n                                    <div className=\"footer\">\n                                        <input type=\"text\" placeholder=\"Pseudo\" value={this.state.username} onChange={ev => this.setState({username: ev.target.value})} className=\"form-control\"/>\n                                        <br />\n                                        <button className=\"btn btn-primary form-control\" onClick={this.handleLogin}>Send</button>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            )\n        } else {\n            if (this.state.username === \"\" || this.state.username === \"Système\") {\n                this.setState({username: \"Invité\"});\n            }\n            return (\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <div className=\"col-4\">\n                            <div className=\"card\">\n                                <div className=\"card-body\">\n                                    <div className=\"card-title\">Salons</div>\n                                    <hr />\n                                    <div className=\"salons\">\n                                    {this.state.channel.map(chat => {\n                                        return (\n                                        <a class=\"btn btn-outline-danger\" href>{chat.name}</a>)\n                                        })}\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"col-6\">\n                            <div className=\"card\">\n                                <div className=\"card-body\">\n                                    <div className=\"card-title\">Global Chat</div>\n                                    <hr/>\n                                    <div className=\"messages\">\n                                        {this.state.messages.map(message => {\n                                            if (message.author === \"Système\") {\n                                                return (\n                                                    <div className=\"text-danger\">{message.author}: {message.message}</div>\n                                                )\n                                            } else {\n                                                return (\n                                                    <div>{message.author}: {message.message}</div>\n                                                )\n                                            }\n                                        })}\n                                    </div>\n                                    <div className=\"footer\">\n                                        <input type=\"text\" placeholder=\"Message\" className=\"form-control\" value={this.state.message} onChange={ev => this.setState({message: ev.target.value})}/>\n                                        <br/>\n                                        <button className=\"btn btn-primary form-control\" onClick={this.sendMessage}>Envoi</button>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"col-2\">\n                            <div className=\"card\">\n                                <div className=\"card-body\">\n                                    <div className=\"card-title\">Utilisateurs</div>\n                                    <hr />\n                                    <div className=\"users\">\n                                    {this.state.users.map(user => {\n                                        return (\n                                            <div class=\"user-item\">{user.username}</div>\n                                        )\n                                    })}\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            );\n        }\n    }\n}\n\nexport default Chat;"]},"metadata":{},"sourceType":"module"}